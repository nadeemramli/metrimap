# Project Memory

This file captures project-specific knowledge, conventions, and preferences. It is secondary to the main product requirements in `docs/prd.md` (single source of truth).

## User Preferences

- Minimal inline comments; prefer descriptive, feature-based console messages for debugging.
- Reuse existing `src/components/ui/*` before adding new UI dependencies.

## Technical Decisions (Canonical)

- Frontend: React 19 + TypeScript + Vite 7
- Canvas: React Flow (via `@xyflow/react`) + Dagre auto-layout
- UI: Shadcn + Tailwind CSS v4 + Recharts
- State: Zustand (stores: `appStore`, `projectsStore`, `canvasStore`, `evidenceStore`)
- Data/Backend: Supabase (`@supabase/supabase-js`) with RLS in production
- Auth:
  - Production/Staging: Clerk auth + Supabase client (Clerk-authenticated)
  - Local Development: Dev bypass with `createDevSupabaseClient` (service role) for faster iteration
- Environment detection: based on Supabase URL (localhost/127.0.0.1 ⇒ development)
- Data Fetching: React Query (TanStack)
- Workers: Web Workers with Comlink; math.js + simple-statistics
- Deployment: Vercel

## Architecture Overview

- Routing: React Router with nested canvas routes under `CanvasLayout`.
  - `/` → `HomePage`
  - `/canvas/:canvasId` → `CanvasPage` (index), `dashboard`, `assets`, `evidence`, `source`, `settings`
  - Evidence pages: `/evidence`, `/evidence/:evidenceId`
- Supabase client: `src/lib/supabase/client.ts` provides default, Clerk-authenticated, and development clients.
- Services live under `src/lib/supabase/services/`.
- Stores: colocated in `src/lib/stores/` with explicit action sets and types.

## Conventions

- Use Zustand stores as the single source of UI state; persist via Supabase services.
- Keep console logs high-signal and feature-scoped; avoid noisy logs.
- Documentation belongs in `/docs`. Link to PRD sections instead of duplicating content.

## Current Status (Concise)

- Implemented (aligned with PRD):
  - Canvas editor (nodes/edges/groups, auto-layout, toolbars, global date range)
  - Metric Cards + Card Settings (Details, Data, Source, Events, Key Results, Correlations, Comments, Settings)
  - Relationship workflows (Deterministic/Probabilistic/Causal/Compositional), Evidence repository, relationship history
  - Beyond-canvas pages: Home, Dashboard, Assets, Evidence Repository, Source, Settings
  - Supabase persistence (CRUD), Workers-based computations (formula, correlation)
  - Auth: Clerk + Supabase session sync; protected routes
- Polishing/auxiliary:
  - Advanced search, keyboard shortcuts/accessibility, bulk operations

### Open Priorities

1. Canvas version history and restore points
2. Advanced chart types and visualization options

### Explicit Exclusions

- Real-time collaboration, export/import, templates/blueprints
- Advanced data connectors, sharing/embedding, AI metric suggestions

## Operational Notes

- Tests exist for key parts; broad coverage is deprioritized for now.
- Supabase CLI: use `npx supabase` for all commands.

## Source of Truth

- Product requirements: `docs/prd.md`
- Environment setup: `docs/environment/ENVIRONMENT_GUIDE.md`

This memory intentionally avoids duplicating PRD content. It records only decisions, preferences, and live priorities to keep development aligned and unambiguous.
